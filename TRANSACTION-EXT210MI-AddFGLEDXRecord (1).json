{"utilities":{},"programModules":{"EXT210MI":{"program":"EXT210MI","triggers":{},"transactions":{"AddFGLEDXRecord":{"sourceUuid":"d4df6bc4-4a42-4475-813a-36b06d539038","name":"AddFGLEDXRecord","program":"EXT210MI","description":"Add data to FGLEDX","active":true,"multi":false,"modified":1663237780831,"modifiedBy":"APSHMA","outputFields":[{"name":"GEXN","description":"GL information number","length":3,"mandatory":false,"type":"N"},{"name":"GEXI","description":"GL additional info","length":45,"mandatory":false,"type":"A"}],"inputFields":[{"name":"YEA4","description":"Year","length":4,"mandatory":false,"type":"N"},{"name":"JRNO","description":"Journal no","length":7,"mandatory":true,"type":"N"},{"name":"JSNO","description":"Journal sequence number","length":7,"mandatory":false,"type":"N"},{"name":"GEXN","description":"GL Information number","length":3,"mandatory":false,"type":"N"},{"name":"GEXI","description":"GL Additional information","length":45,"mandatory":false,"type":"A"},{"name":"GEXS","description":"GL info seq no","length":3,"mandatory":false,"type":"N"}],"utilities":["DateUtils"]}},"batches":{}}},"sources":{"d4df6bc4-4a42-4475-813a-36b06d539038":{"uuid":"d4df6bc4-4a42-4475-813a-36b06d539038","updated":1663237771006,"updatedBy":"APSHMA","created":1660907223499,"createdBy":"APSHMA","apiVersion":"0.9","beVersion":"16.0.0.20220719120167","codeHash":"E8FD9827263629ED9C58A7BEB3C7CE3428F8D48CE83ACB32FF8B13134408BFB5","code":"LyoqDQogICAqIEFkZCBBcGkgdG8gY3JlYXRlIHJlY29yZHMgaW4gRkdMRURYIHRvIHVzZSB0aGlzIGluIE1lYyBtYXBwaW5nDQogICAqIA0KICAgKiBAYXV0aG9yIDogU2hhc2hhbmsgTWFsYWxpDQogICAqIEB2ZXJzaW9uIDogMS4wDQogICAqIA0KICAgKiBAcGFyYW0gWUVBNCBZRUE0DQogICAqIEBwYXJhbSBKUk5PIEpvdXJuYWwgbnVtYmVyIA0KICAgKiBAcGFyYW0gSlNOTyBKb3VybmFsIHNlcXVlbmNlIG51bWJlcg0KICAgKiBAcGFyYW0gR0VYTiBHTCBpbmZvcm1hdGlvbiBudW1iZXIgDQogICAqIEBwYXJhbSBHRVhJIEdMIGFkZGl0aW9uYWwgaW5mbyANCiAgICogQHBhcmFtIEdFWFMgR0wgaW5mb3JtYXRpb24gc2VxdWVuY2UgbnVtYmVyIA0KKiovDQoNCnB1YmxpYyBjbGFzcyBBZGRGR0xFRFhSZWNvcmQgZXh0ZW5kcyBFeHRlbmRNM1RyYW5zYWN0aW9uIHsNCiAgcHJpdmF0ZSBmaW5hbCBNSUFQSSBtaQ0KICBwcml2YXRlIGZpbmFsIERhdGFiYXNlQVBJIGRhdGFiYXNlDQogIHByaXZhdGUgZmluYWwgTG9nZ2VyQVBJIGxvZ2dlcg0KICBwcml2YXRlIGZpbmFsIFByb2dyYW1BUEkgcHJvZ3JhbQ0KICBwcml2YXRlIGZpbmFsIFV0aWxpdHlBUEkgdXRpbGl0eQ0KICBwcml2YXRlIGludCByZWNvcmRBZGRlZA0KICBwcml2YXRlIGludCBpWUVBNA0KICBwcml2YXRlIGludCBpSlJOTyANCiAgcHJpdmF0ZSBpbnQgaUpTTk8gDQogIHByaXZhdGUgU3RyaW5nIGlHRVhJID0gIiI7DQogIHByaXZhdGUgaW50IGlHRVhODQogIA0KDQogICAvKiogRnVuY3Rpb24gQ29uc3RydWN0b3IgPT4gQWRkcyBJbmZvcm1hdGlvbiBpbiBNMw0KICAgICAqLw0KICAgICANCiAgcHVibGljIEFkZEZHTEVEWFJlY29yZChNSUFQSSBtaSwgRGF0YWJhc2VBUEkgZGF0YWJhc2UsIExvZ2dlckFQSSBsb2dnZXIsIFByb2dyYW1BUEkgcHJvZ3JhbSwgVXRpbGl0eUFQSSB1dGlsaXR5KSB7DQogICAgdGhpcy5taSA9IG1pDQogICAgdGhpcy5kYXRhYmFzZSA9IGRhdGFiYXNlDQogICAgdGhpcy5sb2dnZXIgPSBsb2dnZXINCiAgICB0aGlzLnByb2dyYW0gPSBwcm9ncmFtDQogICAgdGhpcy51dGlsaXR5ID0gdXRpbGl0eQ0KICB9DQogIA0KICANCiAgIC8qKiBDb21wYXJlIE1JIElucHV0cyB3aXRoIEZHTEVERyBkYXRhDQogICAgICogUmVhZCBGR0xFREcgcmVjb3JkcyBpbiBNMyANCiAgICAgKiBAcGFyYW0gWUVBNCBZRUE0DQogICAgICogQHBhcmFtIEpSTk8gSm91cm5hbCBudW1iZXIgDQogICAgICogQHBhcmFtIEpTTk8gSm91cm5hbCBzZXF1ZW5jZSBudW1iZXINCiAgICAgKiovDQogICAgIA0KICAgIHByaXZhdGUgYm9vbGVhbiBjaGVja0ZnbGVkZ1JlY29kKCl7DQogICAgICANCiAgICBpbnQgY29tcGFueSA9IChJbnRlZ2VyKSBwcm9ncmFtLmdldExEQVpEKCkuQ09OTw0KICAgIFN0cmluZyBESVZJID0gcHJvZ3JhbS5nZXRMREFaRCgpLkRJVkkNCiAgICBpWUVBNCA9IG1pLmluLllFQTQNCiAgICBpSlJOTyA9IG1pLmluLkpSTk8NCiAgICBpSlNOTyA9IG1pLmluLkpTTk8NCiAgICAgIA0KICAgIERCQWN0aW9uIHF1ZXJ5MSA9IGRhdGFiYXNlLnRhYmxlKCJGR0xFREciKS5pbmRleCgiMDAiKS5zZWxlY3Rpb24oIkVHWUVBNCIsIkVHSlJOTyIsIkVHSlNOTyIpLmJ1aWxkKCk7DQogICAgREJDb250YWluZXIgY29udGFpbmVyMSA9IHF1ZXJ5MS5nZXRDb250YWluZXIoKTsNCiAgICANCiAgICBjb250YWluZXIxLnNldEludCgiRUdDT05PIiwgY29tcGFueSkNCiAgICBjb250YWluZXIxLnNldCgiRUdESVZJIiwgRElWSSkNCiAgICBjb250YWluZXIxLnNldEludCgiRUdZRUE0IiwgaVlFQTQpDQogICAgY29udGFpbmVyMS5zZXRJbnQoIkVHSlJOTyIsIGlKUk5PKQ0KICAgIGNvbnRhaW5lcjEuc2V0SW50KCJFR0pTTk8iLCBpSlNOTykNCiAgICBpZihxdWVyeTEucmVhZChjb250YWluZXIxKSkgew0KICAgICAgcmV0dXJuIHRydWU7DQogICAgfWVsc2V7DQogICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KICB9DQogIA0KICAvKiogDQogICAgICogTG9naWMgaW1wbGVtZW50ZWQgYXMgcGVyIHRoZSBNQUsgY29kZSBvZiBQRUNISygpDQogICAgICogVmFsaWRhdGlvbiBmb3IgR0VYTj01MCwgQ2hlY2sgR0VYSSBlcXVhbHMgYmxhbmsgYW5kIEdFWEkgbGVuZ3RoIGdyZWF0ZXIgdGhhbiAyNQ0KICAgICAqIA0KICAgICAqKi8NCiAgDQogICBwcml2YXRlIGJvb2xlYW4gdmFsaWRhdGVGZ2xlZHhSZWNvcmQoKXsNCiAgDQogICAgICBpZihpR0VYTiA9PSA1MCkgeyAgICAgICAgICAgIA0KICAgICAgICAgaWYgKGlHRVhJLmVxdWFscygiIikpIHsNCiAgICAgICAgICAgICBtaS5lcnJvcigiR0wgYWRkaXRpb25hbCBpbmZvIFJlcXVlc3QgcmVmZXJlbmNlIG51bWJlciBtdXN0IGJlIGVudGVyZWQiKTsNCiAgICAgICAgICAgIHJldHVybjsgICANCiAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgaWYgKGlHRVhJLmxlbmd0aCgpID4gMjUpIHsNCiAgICAgICAgICAgICAgIG1pLmVycm9yKCJHTCBhZGRpdGlvbmFsIGluZm8gUmVxdWVzdCByZWZlcmVuY2UgbnVtYmVyIG1heSBub3QgYmUgbG9uZ2VyIHRoYW4gMjUiKTsNCiAgICAgICAgICAgICAgIHJldHVybjsgICANCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0NCiAgICAgIH0NCiAgIH0NCiAgDQogIC8qKiBFbnRyeSBwb2ludCBjYWxsZWQgYnkgTTMgZm9yIHRoaXMgTUkgPGJyPg0KICAgICAqIFdvcmtlciBmb3IgZnVuY3Rpb24gdGhhdCBwZXJmb3JtcyBhY3Rpb24gPGJyPg0KICAgICAqIFJlYWRzIE1JIGlucHV0cyBhbmQgcmV0dXJucyBhIHJlc3VsdCBvciBlcnJvciBtZXNzYWdlIHRvIHRoZSBNSSBjYWxsZXINCiAgICAgKiANCiAgICAgKiBBZGQgRkdMRURYIHJlY29yZCBpbiBNMyANCiAgICAgKiBAcGFyYW0gWUVBNCBZRUE0DQogICAgICogQHBhcmFtIEpSTk8gSm91cm5hbCBudW1iZXIgDQogICAgICogQHBhcmFtIEpTTk8gSm91cm5hbCBzZXF1ZW5jZSBudW1iZXINCiAgICAgKiBAcGFyYW0gR0VYTiBHTCBpbmZvcm1hdGlvbiBudW1iZXIgDQogICAgICogQHBhcmFtIEdFWEkgR0wgYWRkaXRpb25hbCBpbmZvIA0KICAgICAqIEBwYXJhbSBHRVhTIEdMIGluZm9ybWF0aW9uIHNlcXVlbmNlIG51bWJlciAgDQogICAgICoqLw0KICANCiAgcHVibGljIHZvaWQgbWFpbigpIHsNCiAgICANCiAgICBpbnQgY29tcGFueSA9IChJbnRlZ2VyKSBwcm9ncmFtLmdldExEQVpEKCkuQ09OTw0KICAgIFN0cmluZyBESVZJID0gcHJvZ3JhbS5nZXRMREFaRCgpLkRJVkkNCiAgIC8vIGlZRUE0ID0gbWkuaW4uWUVBNA0KICAgIC8vaUpSTk8gPSBtaS5pbi5KUk5PDQogICAgLy9pSlNOTyA9IG1pLmluLkpTTk8NCiAgICBpR0VYTiA9IG1pLmluLkdFWE4NCiAgICBpR0VYSSA9IG1pLmluLkdFWEkNCiAgICBpbnQgaUdFWFMgPSBtaS5pbi5HRVhTDQogICAgDQogICAgaW50IGN1cnJlbnREYXRlID0gdXRpbGl0eS5jYWxsKCJEYXRlVXRpbHMiLCAiY3VycmVudERhdGVZOEFzSW50IikNCiAgICBpbnQgY3VycmVudFRpbWUgPSB1dGlsaXR5LmNhbGwoIkRhdGVVdGlscyIsICJjdXJyZW50VGltZUFzSW50IikNCiAgICBsb25nIGN1cnJlbnRMTVRTID0gdXRpbGl0eS5jYWxsKCJEYXRlVXRpbHMiLCAiY3VycmVudEVwb2NoTWlsbGlzZWNvbmRzIikNCiAgICANCiAgICBpZighY2hlY2tGZ2xlZGdSZWNvZCgpKXsNCiAgICAgIG1pLmVycm9yKCJKb3VybmFsIG51bWJlciAke2lKUk5PfSBpcyBpbnZhbGlkIik7DQogICAgICByZXR1cm47DQogICAgfQ0KICAgIA0KICAgIERCQWN0aW9uIHF1ZXJ5ID0gZGF0YWJhc2UudGFibGUoIkZHTEVEWCIpLmluZGV4KCIwMCIpLnNlbGVjdEFsbEZpZWxkcygpLmJ1aWxkKCkNCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIA0KICAgIGNvbnRhaW5lci5zZXRJbnQoIkVHQ09OTyIsIGNvbXBhbnkpDQogICAgY29udGFpbmVyLnNldCgiRUdESVZJIiwgRElWSSkNCiAgICBjb250YWluZXIuc2V0SW50KCJFR1lFQTQiLCBpWUVBNCkNCiAgICBjb250YWluZXIuc2V0SW50KCJFR0pSTk8iLCBpSlJOTykNCiAgICBjb250YWluZXIuc2V0SW50KCJFR0pTTk8iLCBpSlNOTykNCiAgICBjb250YWluZXIuc2V0SW50KCJFR0dFWE4iLCBpR0VYTikNCiAgICBjb250YWluZXIuc2V0KCJFR0dFWEkiLCBpR0VYSSkNCiAgICBjb250YWluZXIuc2V0SW50KCJFR0dFWFMiLCBpR0VYUykNCiAgICBjb250YWluZXIuc2V0SW50KCJFR1JHRFQiLCBjdXJyZW50RGF0ZSkNCiAgICBjb250YWluZXIuc2V0SW50KCJFR1JHVE0iLCBjdXJyZW50VGltZSkNCiAgICBjb250YWluZXIuc2V0SW50KCJFR0xNRFQiLCBjdXJyZW50RGF0ZSkNCiAgICBjb250YWluZXIuc2V0SW50KCJFR0NITk8iLCAxKQ0KICAgIGNvbnRhaW5lci5zZXQoIkVHQ0hJRCIsIHByb2dyYW0uZ2V0VXNlcigpKQ0KICAgIA0KICAgIA0KICAgIGJvb2xlYW4gaW5zZXJ0RG9uZSA9IHF1ZXJ5Lmluc2VydChjb250YWluZXIpDQogICAgLy9pZiAodmFsaWRhdGVGZ2xlZHhSZWNvcmQoKSl7DQogICAgaWYgKGluc2VydERvbmUpIHsNCiAgICAgICBtaS5vdXREYXRhLnB1dCgiR0VYTiIsIGlHRVhOLnRvU3RyaW5nKCkpDQogICAgICAgbWkub3V0RGF0YS5wdXQoIkdFWEkiLCAgaUdFWEkpDQogICAgICAgbWkud3JpdGUoKSANCiAgICB9DQogICAvLyB9DQogIH0NCn0="}}}